name: Installer action

on:
  workflow_call:
    inputs:
      os:
        required: true
        type: string
      container_name:
        required: false
        type: string
        default: ""
      artifact_name:
        required: true
        type: string
      concurrency:
        required: false
        type: number
        default: 0
jobs:
  job:
    defaults:
      run:
        shell: bash

    runs-on: ${{ inputs.os }}
    container: ${{ inputs.container_name }}

    steps:
    
    - name: Download installer artifact
      uses: actions/download-artifact@v4
      with:
        name: ${{ inputs.artifact_name }}
      
    - name: Install dependencies
      run: apt-get update && apt-get -y dist-upgrade && apt-get install -y glibc git
      if: startsWith(inputs.container_name, 'altlinux') == true


    - name: Install dependencies
      run: yum update -y && yum install -y git-core
      if: startsWith(inputs.container_name, 'rocky') == true
      
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: recursive
        fetch-depth: 1

    - name: Install trik-studio and dll search
      run: |
        export UNINSTALL_SCRIPT_PATH=$GITHUB_WORKSPACE/trik_studio_uninstallscript.qs
        export INSTALLER_EXT_NAME=$(ls -1d *installer* | head -n 1)
        export INSTALLER_NAME="${INSTALLER_EXT_NAME%.*}"
        buildScripts/github/install_installer_${{ runner.os }}.sh
      env:
        CONCURRENCY: ${{ inputs.concurrency }}
        
    - name: Reinstall trik-studio and dll search
      run: |
        export UNINSTALL_SCRIPT_PATH=$GITHUB_WORKSPACE/trik_studio_uninstallscript.qs
        export INSTALLER_EXT_NAME=$(ls -1d *installer* | head -n 1)
        export INSTALLER_NAME="${INSTALLER_EXT_NAME%.*}"
        buildScripts/github/install_installer_${{ runner.os }}.sh
      env:
        CONCURRENCY: ${{ inputs.concurrency }}
 
    - name: Downloads minimal tests
      run: |
        curl --output tests.7z "https://dl.trikset.com/edu/.solutions20200701/testing_small.7z"
        7za x tests.7z

    - name: Run minimal tests
      run: |
        TWOD_EXEC_NAME=$(ls -1d $GITHUB_WORKSPACE/2D-model* | head -n 1)
        for i in $GITHUB_WORKSPACE/testing_small/*; do "$TWOD_EXEC_NAME" -b "$i"; done
