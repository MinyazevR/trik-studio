name: Set up Action
   
on:
  workflow_call:
    inputs:
      os:
        required: true
        type: string
      executor:
        required: false
        type: string
        default: "time"
      lint:
        required: false
        type: string
        default: 'false'
      build:
        required: true
        type: string
      build_installer:
        required: true
        type: string
      trik_qt_version:
        required: false
        type: string
        default: '5.12'
      trik_python3_version_minor:
        required: false
        type: string
        default: '9'
      qtifw_version:
        required: false
        type: string
        default: '4.6.1'
      xcode_version:
        required: false
        type: string
        default: '13.4'
      config:
        required: false
        type: string
        default: 'release'
      qmake_extra:
        required: false
        type: string
        default: "CONFIG+=tests CONFIG+=noPch CONFIG+=ccache"
      tests:
        required: false
        type: string
        default: "./run-simulator-tests.sh"
      container_name:
        required: false
        type: string
        default: ""
      gcc_version:
        required: false
        type: string
        default: "13"

jobs:
  job:
    defaults:
      run:
        shell: bash -l {0}

    runs-on: ${{ inputs.os }}
    container: ${{ inputs.container_name }}
    
    steps:
    - name: Install dependencies
      run: apt-get update && apt-get -y dist-upgrade && apt-get install -y glibc git
      if: startsWith(inputs.container_name, 'altlinux') == true


    - name: Install dependencies
      run: yum update -y && yum install -y git-core
      if: startsWith(inputs.container_name, 'rocky') == true
      
    - name: Configure git
      run: |
          git config --global core.symlinks true
          git config --global core.autocrlf input

    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: recursive
        fetch-depth: 1

    - name: Set up environment
      run: buildScripts/github/install_${{ runner.os }}.sh
      env:
        TRIK_QT_VERSION: ${{ inputs.trik_qt_version }}
        TRIK_PYTHON3_VERSION_MINOR: ${{ inputs.trik_python3_version_minor }}
        QTIFW_VERSION: ${{ inputs.qtifw_version }}
        XCODE_VERSION: ${{ inputs.xcode_version }}
        BUILD_INSTALLER: ${{ inputs.build_installer }}
        GCC_VERSION: ${{ inputs.gcc_version }}
      if: ${{ inputs.build == 'true' }}

    - name: Lint
      run: |
          sudo apt-get update && sudo apt-get install -y --no-install-recommends qttools5-dev-tools qtbase5-dev vera++ 
          ${{ inputs.executor }} buildScripts/github/vera_translation.sh
      if: ${{ inputs.lint == 'true' }}

    - name: Restore cache
      uses: actions/cache@v4
      with:
        path: ${{ github.workspace }}/.ccache/${{ inputs.os }}-c${{ inputs.container_name }}-${{ inputs.config }}
        key: ccache-c${{ inputs.container_name }}-${{ inputs.os }}-${{ inputs.config }}-${{ inputs.qmake_extra }}-${{ github.sha }}
        restore-keys: |
          ccache-c${{ inputs.container_name }}-${{ inputs.os }}-${{ inputs.config }}-${{ inputs.qmake_extra }}
          ccache-c${{ inputs.container_name }}-${{ inputs.os }}-${{ inputs.config }}
          ccache-c${{ inputs.container_name }}-${{ inputs.os }}
      if: ${{ inputs.build == 'true' }}

    - name: Build
      run: buildScripts/github/build.sh
      env:
        TRIK_QT_VERSION: ${{ inputs.trik_qt_version }}
        TRIK_PYTHON3_VERSION_MINOR: ${{ inputs.trik_python3_version_minor }}
        CACHE_DIR: ${{ github.workspace }}/.ccache/${{ inputs.os }}-c${{ inputs.container_name }}-${{ inputs.config }}
        CCACHE_CONFIGPATH: ${{ github.workspace }}/ccache.conf
        PROJECT: "studio"
        CONFIG: ${{ inputs.config }}
        EXECUTOR: ${{ inputs.executor }}
        QMAKE_EXTRA: ${{ inputs.qmake_extra }}
      if: ${{ inputs.build == 'true' }}

    - name: Save build cache
      uses: actions/cache/save@v4
      with:
        path: ${{ github.workspace }}/.ccache/${{ inputs.os }}-c${{ inputs.container_name }}-${{ inputs.config }}
        key: ccache-c${{ inputs.container_name }}-${{ inputs.os }}-${{ inputs.config }}-${{ inputs.qmake_extra }}-${{ github.sha }}
      if: ${{ inputs.build == 'true' }}
        
    - name: Run tests
      run: ${{ inputs.executor }} buildScripts/github/run_tests.sh && ${{ inputs.executor }} buildScripts/github/test.sh
      env:
        TRIK_PYTHON3_VERSION_MINOR: ${{ inputs.trik_python3_version_minor }}
        TESTS: ${{ inputs.tests }}
      if: ${{ inputs.build == 'true' }}
      
    - name: Build Installer
      run: |
        BRANCH_NAME=${BRANCH_NAME//\//-}
        buildScripts/github/build_installer.sh
      env:
        TRIK_QT_VERSION: ${{ inputs.trik_qt_version }}
        TRIK_PYTHON3_VERSION_MINOR: ${{ inputs.trik_python3_version_minor }}
        PROJECT: "studio"
        CONFIG: ${{ inputs.config }}
        EXECUTOR: ${{ inputs.executor }}
        BRANCH_NAME: ${{ github.event.pull_request.head.ref }}
        PULLREQUESTNUMBER: ${{ github.event.pull_request.number }}
        ssh_key: ${{ secrets.DL_PRIVATE_SSH_KEY }}
        username: ${{ secrets.DL_USERNAME }}
        host: ${{ secrets.DL_HOST }}
      if: ${{ inputs.build_installer == 'true' }}

    - name: Upload installer artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ runner.os }}-${{ inputs.container_name }}-installer
        path: |
          installer/*.exe
          installer/*.run
          installer/*.dmg
      if: ${{ inputs.build_installer == 'true' }}
